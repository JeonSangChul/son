<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="son.board.dao.BoardMapper">
	
	<select id="selectBoardMasterInfo" parameterType="paramMap" resultType="egovMap">
		<![CDATA[
			SELECT t1.board_id
			      ,t1.board_name
			      ,t1.comment_yn
			      ,t1.use_yn
			  FROM board_master t1
			 WHERE 1=1
			   AND t1.board_id = #{boardId}
		]]>
	</select>
	
    <select id="selectBoardList" parameterType="paramMap" resultType="egovMap">
        <![CDATA[
        	SELECT  t1.board_id
        		   ,t1.board_name
        		   ,t2.idx
        		   ,t2.title
        		   ,t2.user_id
        		   ,DATE_FORMAT(t2.create_dt,'%Y-%m-%d %T') as create_dt
        		   ,t2.view_cnt
        		   ,user_ip
        		   ,t3.user_name
        	  FROM board_master t1
        	      ,board t2
        	      ,user_info t3
        	 WHERE t1.board_id = #{boardId}
        	   AND t1.board_id = t2.board_id
        	   and t2.user_id = t3.user_id
        	  ORDER BY t2.idx desc
        	 LIMIT #{start} , #{pageSize}
        	 
        ]]>
    </select>
    
    <select id="selectBoardListTotCnt" parameterType="paramMap" resultType="integer">
        <![CDATA[
        	SELECT count(*)
        	  FROM board
        	 WHERE board_id = #{boardId}
        ]]>
    </select>
    
    <insert id="boardInsert" parameterType="paramMap">
        <![CDATA[
        	INSERT INTO board
        			( board_id
        			 ,user_id
        			 ,title
        			 ,content
        			 ,img_id
        			 ,user_ip
        			 ,create_dt
        			 ,update_dt
        			)
        		values 	(#{boardId}
        				 ,#{userId}
        				 ,#{title}
        				 ,#{content}
        				 ,#{imgId}
        				 ,#{userIp}
        				 ,now()
        				 ,now()
        				)
        ]]>
        <selectKey keyProperty="idx" resultType="Integer">
            <![CDATA[
            	SELECT LAST_INSERT_ID();
            ]]>
        </selectKey>
    </insert>
    
    <insert id="boardImgInsert" parameterType="paramMap">
        <![CDATA[
        	INSERT INTO board_image
        			( create_dt
        			)
        		VALUES (  now()
        			   )
        ]]>
        <selectKey keyProperty="imgId" resultType="Integer">
            <![CDATA[
            	SELECT LAST_INSERT_ID();
            ]]>
        </selectKey>
    </insert>
    
    <insert id="boardImgDetailInsert" parameterType="paramMap">
        <selectKey keyProperty="imgSrno" resultType="Integer" order="BEFORE">
            <![CDATA[
            	(SELECT IFNULL(MAX(img_srno),0)+1 AS imgSrno FROM board_image_detail WHERE IMG_ID = #{imgId})
            ]]>
        </selectKey>
        
        <![CDATA[
        	INSERT INTO board_image_detail
        			( img_id
        			 ,img_srno
        			 ,origin_file_name
        			 ,stored_file_name
        			 ,file_size
        			 ,file_path
        			)
        		VALUES (  #{imgId}
        				 ,#{imgSrno}
        				 ,#{originFileName}
        				 ,#{storedName}
        				 ,#{fileSize}
        				 ,#{filePath}
        			   )
        ]]>
    </insert>
    
    <select id="selectBoardDetail" parameterType="paramMap" resultType="egovMap">
        <![CDATA[
        	SELECT board_id
        		   ,idx
        	       ,title
        	       ,content
        	       ,user_id
        	       ,DATE_FORMAT(create_dt,'%Y-%m-%d') create_dt
        	       ,img_id
        	  FROM board
        	 WHERE 1=1
        	   AND board_id = #{boardId}
        	   AND idx = #{idx}
        ]]>
    </select>
    
    <select id="selectImgList" parameterType="paramMap" resultType="egovMap">
        <![CDATA[
        	SELECT t2.img_id
        		  ,t2.img_srno
        		  ,t2.origin_file_name
        		  ,t2.stored_file_name
        		  ,t2.file_size
        		  ,t2.file_path
        		  ,t2.file_extsn
        	  FROM board_image t1
        	      ,board_image_detail t2
        	 WHERE 1=1
        	   AND t1.img_id = t2.img_id
        	   and t1.img_id = #{imgId}
        ]]>
    </select>
    
    <update id="boardUpdate" parameterType="paramMap">
    	<![CDATA[
    		UPDATE board
    		   SET title = #{title}
    		      ,content = #{content}
    		      ,update_dt = now()
    	]]>
	    	<if test='imgId == null or imgId ==""'>
	    		<![CDATA[
	    		  ,img_id = null
	    		]]>
	    	</if>
	    	<if test='imgId != null and imgId !=""'>
	    		<![CDATA[
	    		  ,img_id = #{imgId}
	    		]]>
	    	</if>  
    	<![CDATA[
    		 WHERE 1=1
    		   AND board_id = #{boardId}
    		   AND idx = #{idx}
    	]]>
    </update>
    
    <delete id="boardDelete" parameterType="paramMap">
    	<![CDATA[
    		DELETE 
    		  FROM board
    		 WHERE 1=1
    		   and board_id = #{boardId}
    		   and idx = #{idx}
    	]]>
    </delete>
    
    <update id="updateViewCnt" parameterType="paramMap">
    	<![CDATA[
    		UPDATE board
    		   SET view_cnt = IFNULL(view_cnt,0)+1
    		 WHERE 1=1
    		   and board_id = #{boardId}
    		   and idx = #{idx}
    	]]>
    </update>
    
    
    <resultMap id="recommendMap" type="java.util.HashMap">
        <result jdbcType="INTEGER" property="goodCnt" column="good_cnt" javaType="java.lang.Integer" />
        <result jdbcType="INTEGER" property="badCnt" column="bad_cnt" javaType="java.lang.Integer"/>
    </resultMap>
    
    <select id="selectRecommend" parameterType="paramMap" resultMap="recommendMap">
    	<![CDATA[
    		select ifnull(sum(case when type_cd  = '1' then 1 else 0 end),0) as good_cnt
    		      ,ifnull(sum(case when type_cd  = '2' then 1 else 0 end),0) as bad_cnt 
    		  from board_recommend
    		 where 1=1
    		   and board_id = #{boardId}
    		   and idx = #{idx}
    	]]>
    		   <if test='userId != null and userId !=""'>
	    		<![CDATA[
	    		  and user_id = #{userId}
	    		]]>
	    	</if>
    </select>
    
    <insert id="insertRecommend" parameterType="paramMap">
    	<![CDATA[
    		insert into board_recommend
    				( board_id
    				 ,idx
    				 ,user_id
    				 ,type_cd
    				 ,create_dt
    				)
    			values 	( #{boardId}
    					 ,#{idx}
    					 ,#{userId}
    					 ,#{typeCd}
    					 ,now()
    					)
    	]]>
    </insert>
    
    <update id="updateRecommend" parameterType="paramMap">
    	<![CDATA[
    		update board_recommend
    		   set type_cd = #{typeCd}
    		 where board_id = #{boardId}
    		   and idx = #{idx}
    		   and user_id = #{userId}
    	]]>
    </update>
    
    <delete id="deleteRecommend" parameterType="paramMap">
    	<![CDATA[
    		delete
    		  from board_recommend
    		 where board_id = #{boardId}
    		   and idx = #{idx}
    		   and user_id = #{userId}
    	]]>
    </delete>
</mapper>